{
	"info": {
		"_postman_id": "9f6ca740-155a-423c-bd3c-e27a7c6628df",
		"name": "E- Hailing System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44002628"
	},
	"item": [
		{
			"name": "Rides",
			"item": [
				{
					"name": "Show Rides",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>ID</th>\r",
									"        <th>Pickup Location</th>\r",
									"        <th>Destination</th>\r",
									"        <th>Driver ID</th>\r",
									"        <th>Status</th>\r",
									"    </tr>\r",
									"    \r",
									"    {{#each response}}\r",
									"        <tr>\r",
									"            <td>{{_id}}</td>\r",
									"            <td>{{pickupLocation}}</td>\r",
									"            <td>{{destination}}</td>\r",
									"            <td>{{driveId}}</td>\r",
									"            <td>{{status}}</td>\r",
									"        </tr>\r",
									"    {{/each}}\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"// Verify the format of the response body\r",
									"const response = pm.response.json();\r",
									"pm.test('Verify the format of the response body', function () {\r",
									"    pm.expect(response).to.be.an('array');\r",
									"    pm.expect(response).to.have.length(1); // Assuming there is only one object in the array\r",
									"    pm.expect(response[0]._id).to.be.a('string');\r",
									"    pm.expect(response[0].pickupLocation).to.be.a('string');\r",
									"    pm.expect(response[0].destination).to.be.a('string');\r",
									"    pm.expect(response[0].driveId).to.be.a('string');\r",
									"    pm.expect(response[0].status).to.be.a('string');\r",
									"});pm.visualizer.set(template, constructVisualizerPayload());\r",
									"// Check data types for the selected response section\r",
									"const response = pm.response.json();\r",
									"pm.test('Verify the data types for the selected response section', function () {\r",
									"    pm.expect(response).to.be.an('array');\r",
									"    pm.expect(response).to.have.length(1); // Assuming there is only one object in the array\r",
									"    pm.expect(response[0]._id).to.be.a('string');\r",
									"    pm.expect(response[0].pickupLocation).to.be.a('string');\r",
									"    pm.expect(response[0].destination).to.be.a('string');\r",
									"    pm.expect(response[0].driveId).to.be.a('string');\r",
									"    pm.expect(response[0].status).to.be.a('string');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": false,
						"protocolVersion": "auto"
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/rides",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"rides"
							],
							"query": [
								{
									"key": "status",
									"value": "cancelled",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Rides",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/rides/67fa8d0135503bd04e762552",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"rides",
								"67fa8d0135503bd04e762552"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Drivers",
			"item": [
				{
					"name": "Add New Driver",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Abu\",\r\n  \"vehicleType\": \"Sedan\",\r\n  \"isAvailable\": true,\r\n  \"rating\": 4.5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/drivers/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"drivers",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ride Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response Content-Type is text/html\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response schema matches the expected format\", function () {\r",
									"    pm.expect(pm.response).to.have.status(404);\r",
									"    pm.expect(pm.response).to.have.header('Content-Type', 'text/html');\r",
									"    pm.expect(pm.response.text()).to.eql(\"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/drivers/67fa8d0235503bd04e762553/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"drivers",
								"67fa8d0235503bd04e762553",
								"status"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Add Rides",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    //user\r\n    \"pickupLocation\": \"DT\",\r\n    \"destination\": \"AK \",\r\n    //driver\r\n    \"driverId\": \"Ali\",\r\n    \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Log In",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"lol@gmail.com\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Sayed Faisal\",\r\n    \"age\" : \"22\",\r\n    \"email\" : \"lol@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"isAdmin\":\"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Driver Rating",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"rating\" : 4.6\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/drivers/6804b6d20dc5002043d6008c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"drivers",
								"6804b6d20dc5002043d6008c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Show Drivers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/drivers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"drivers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show Users",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Block User",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/admin/users/<id>",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users",
								"<id>"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}